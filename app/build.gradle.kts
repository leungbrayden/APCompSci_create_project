/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven("https://jogamp.org/deployment/maven")
    maven("https://repo.clojars.org/")
    maven("https://maven.scijava.org/content/repositories/public/")
}

dependencies {
    implementation("org.jogamp.jogl:jogl-all:2.3.2")
    // implementation("org.jogamp.jogl:jogl-all-natives-macosx-universal:2.1.5")
    
    
    implementation("org.jogamp.gluegen:gluegen-rt:2.3.2")
    // implementation("org.jogamp.gluegen:gluegen-rt-natives-macosx-universal:2.1.5")

    implementation("org.processing:core:3.3.7")





    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = "create_project.Main"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}